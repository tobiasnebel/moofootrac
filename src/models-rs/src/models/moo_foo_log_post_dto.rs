/*
 * Mood and Food Logging App
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

// Tsify generates non-snake-case methods. We need to allow that here in order to keep clippy from escalating.
#![allow(non_snake_case)]

use crate::models;

//use serde::{Deserialize, Serialize};
use serde_derive::Serialize;
use serde_derive::Deserialize;

use tsify_next::Tsify;

#[derive(Tsify, Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[tsify(into_wasm_abi, from_wasm_abi)]
pub struct MooFooLogPostDto {
    #[serde(rename = "mood")]
    
    pub mood: String,
    #[serde(rename = "food1", skip_serializing_if = "Option::is_none")]
    
    pub food1: Option<String>,
    #[serde(rename = "food1Time", skip_serializing_if = "Option::is_none")]
    
    pub food1_time: Option<String>,
    #[serde(rename = "food2", skip_serializing_if = "Option::is_none")]
    
    pub food2: Option<String>,
    #[serde(rename = "food2Time", skip_serializing_if = "Option::is_none")]
    
    pub food2_time: Option<String>,
}

impl MooFooLogPostDto {
    pub fn new(mood: String) -> MooFooLogPostDto {
        MooFooLogPostDto {
            mood,
            food1: None,
            food1_time: None,
            food2: None,
            food2_time: None,
        }
    }
}

